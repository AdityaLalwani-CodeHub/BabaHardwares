/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventorysystem;

import CLASS.Customer;
import CLASS.Generate_Receipt;
import CLASS.IDGenerator;
import CLASS.Myfunc;
import CLASS.Order;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Savepoint;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Aditya
 */
public class CASH_MODE_PAYMENT_FORM extends javax.swing.JFrame {
    private Order order;
    private Customer customer;
    private float balance;
    private final String transactionModeID;
    private float paidAmount;
    /**
     * Creates new form CASH_MODE_PAYMENT_FORM
     * @param orderID
     * @param transactionModeID
     */
    public CASH_MODE_PAYMENT_FORM(String orderID,String transactionModeID) {
        initComponents();
        this.transactionModeID = transactionModeID;
        try {
            fillTheForm(orderID);
        } catch (Exception ex) {
            Logger.getLogger(CASH_MODE_PAYMENT_FORM.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Problem Loading the Data : " + ex.getMessage());
            this.dispose();
            //dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        }
        
    }
    
     private void fillTheForm(String orderID) throws Exception {
        order = Myfunc.getOrderByID(orderID);
        customer = Myfunc.getCustomerByID(order.getCustomerID(),true);
        balance = order.getBalance();
        paidAmount = order.getOrderAmount() - balance;
        //ArrayList<Order_detail> orderDetail = Myfunc.getOrderDetailList_by_OrderID(orderID);
        jLabel_transactionID.setText(IDGenerator.getIDforTransaction());
        jLabel_orderID.setText(orderID);
        jLabel_orderDate.setText(order.getOrderDate().toString());
        jLabel_totalOrderAmount.setText("Rs. " + Float.toString(order.getOrderAmount()) + "/-");
        jLabel_balanceAmount.setText("Rs. " + Float.toString(balance) + "/-");
        jLabel_customerID.setText(customer.getId());
        jLabel_customerName.setText(customer.getFirstName() + " " + customer.getLastName());
        jLabel_remainingBalance.setText(Float.toString(balance) + "/-");
     }
    
 /*   public CASH_MODE_PAYMENT_FORM() {
        initComponents();
    }
*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel_transactionID = new javax.swing.JLabel();
        jLabel_orderID = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel_orderDate = new javax.swing.JLabel();
        jLabel_totalOrderAmount = new javax.swing.JLabel();
        jLabel_balanceLabel = new javax.swing.JLabel();
        jLabel_balanceAmount = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel_customerID = new javax.swing.JLabel();
        jLabel_customerName = new javax.swing.JLabel();
        jTextField_payment = new javax.swing.JTextField();
        jTextField_loadCash = new javax.swing.JTextField();
        jTextField_change = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel_remainingBalance = new javax.swing.JLabel();
        jButton_cancel = new javax.swing.JButton();
        jButton_payment = new javax.swing.JButton();
        jCheckBox_reverseTransaction = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CASH PAYMENT");
        setIconImage((new ImageIcon("img.jpg")).getImage());

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));

        jLabel1.setText("jLabel1");

        jPanel2.setBackground(new java.awt.Color(0, 204, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("TRANSACTION ID :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("ORDER ID :");

        jLabel_transactionID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_transactionID.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_transactionID.setText("###");

        jLabel_orderID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_orderID.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_orderID.setText("###");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("ORDER DATE :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("TOTAL ORDER AMOUNT :");

        jLabel_orderDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_orderDate.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_orderDate.setText("###");

        jLabel_totalOrderAmount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_totalOrderAmount.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_totalOrderAmount.setText("###");

        jLabel_balanceLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_balanceLabel.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_balanceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_balanceLabel.setText("BALANCE AMOUNT :");

        jLabel_balanceAmount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_balanceAmount.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_balanceAmount.setText("###");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_balanceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_transactionID, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                    .addComponent(jLabel_orderID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_orderDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_totalOrderAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_balanceAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_transactionID, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_orderID, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_orderDate, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_totalOrderAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_balanceAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_balanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 51, 204));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("CUSTOMER ID :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("CUSTOMER NAME :");

        jLabel_customerID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_customerID.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_customerID.setText("###");

        jLabel_customerName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_customerName.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_customerName.setText("###");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_customerID, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                    .addComponent(jLabel_customerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_customerID, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_customerName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextField_payment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_paymentKeyReleased(evt);
            }
        });

        jTextField_loadCash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_loadCashKeyReleased(evt);
            }
        });

        jTextField_change.setEditable(false);

        jLabel9.setBackground(new java.awt.Color(204, 204, 204));
        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("PAYMENT");
        jLabel9.setOpaque(true);

        jLabel10.setBackground(new java.awt.Color(204, 204, 204));
        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("LOAD CASH");
        jLabel10.setOpaque(true);

        jLabel11.setBackground(new java.awt.Color(204, 204, 204));
        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("CHANGE");
        jLabel11.setOpaque(true);

        jPanel4.setBackground(new java.awt.Color(255, 255, 102));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("REMAINING BALANCE : Rs.");

        jLabel_remainingBalance.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel_remainingBalance.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel_remainingBalance.setText("0.0/-");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_remainingBalance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
            .addComponent(jLabel_remainingBalance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jButton_cancel.setBackground(new java.awt.Color(255, 51, 0));
        jButton_cancel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_cancel.setForeground(new java.awt.Color(255, 255, 255));
        jButton_cancel.setText("CANCEL");
        jButton_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cancelActionPerformed(evt);
            }
        });

        jButton_payment.setBackground(new java.awt.Color(102, 204, 0));
        jButton_payment.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_payment.setForeground(new java.awt.Color(255, 255, 255));
        jButton_payment.setText("PAY & SHOW RECEIPT");
        jButton_payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_paymentActionPerformed(evt);
            }
        });

        jCheckBox_reverseTransaction.setBackground(new java.awt.Color(0, 51, 102));
        jCheckBox_reverseTransaction.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCheckBox_reverseTransaction.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox_reverseTransaction.setText("PAY TO CUSTOMER(REVERSE TRANSACTION)");
        jCheckBox_reverseTransaction.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox_reverseTransactionItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton_payment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextField_payment))
                                .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jTextField_change)
                                        .addComponent(jTextField_loadCash))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jCheckBox_reverseTransaction)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox_reverseTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_payment, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_loadCash, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_change, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_cancel, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(jButton_payment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton_cancelActionPerformed

    private void jTextField_paymentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_paymentKeyReleased
        // TODO add your handling code here:
        String pay = jTextField_payment.getText();
        if(pay.equals(""))  return;
        float fpay;
        try{
            fpay = Float.parseFloat(pay);
        }catch(NumberFormatException ex)
        {
            jTextField_payment.setText("");
            return;
        }
        if(!jCheckBox_reverseTransaction.isSelected() && fpay > balance)
        {
            JOptionPane.showMessageDialog(null, "You Should NOT PAY MORE than the Balance Amount!");
            String str = jTextField_payment.getText();
            jTextField_payment.setText(str.substring(0, str.length()-1));
            return;
        }
        else if(jCheckBox_reverseTransaction.isSelected() && fpay > paidAmount)
        {
            JOptionPane.showMessageDialog(null, "You Should NOT RETURN MORE than the PAID Amount!");
            String str = jTextField_payment.getText();
            jTextField_payment.setText(str.substring(0, str.length()-1));
            return;
        }
        String cash = jTextField_loadCash.getText();
        if(!cash.equals(""))
        {
            float fcash;
            try{
                fcash = Float.parseFloat(cash);
            }catch(NumberFormatException ex)
            {
                jTextField_payment.setText("");
                jTextField_loadCash.setText("");
                return;
            }
            jTextField_change.setText(Float.toString(fcash - fpay));
            if(!jCheckBox_reverseTransaction.isSelected())
                jLabel_remainingBalance.setText(Float.toString(balance - fpay) + "/-");
            else
                jLabel_remainingBalance.setText(Float.toString(paidAmount - fpay) + "/-");
        }
    }//GEN-LAST:event_jTextField_paymentKeyReleased

    private void jTextField_loadCashKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_loadCashKeyReleased
        // TODO add your handling code here:
        String cash = jTextField_loadCash.getText();
        String pay = jTextField_payment.getText();
        if(!pay.equals("") && !cash.equals(""))
        {
            float fcash,fpay;
            try
            {
                fcash = Float.parseFloat(cash);
                fpay = Float.parseFloat(pay);
            }catch(NumberFormatException ex)
            {
                jTextField_payment.setText("");
                jTextField_loadCash.setText("");
                return;
            }
            jTextField_change.setText(Float.toString(fcash - fpay));
            if(!jCheckBox_reverseTransaction.isSelected())
                jLabel_remainingBalance.setText(Float.toString(balance - fpay) + "/-");
            else
                jLabel_remainingBalance.setText(Float.toString(paidAmount - fpay) + "/-");
        }
    }//GEN-LAST:event_jTextField_loadCashKeyReleased

    private void jButton_paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_paymentActionPerformed
        // TODO add your handling code here:
        if(InsertTranscation())
        {
            int i = JOptionPane.showConfirmDialog(null, "Do You Want to Print Receipt?", "RECEIPT",JOptionPane.YES_NO_OPTION );
            this.dispose();
            if(i == 0)  //YES
            {
                String OrderID = jLabel_orderID.getText();
                Generate_Receipt gr = new Generate_Receipt(OrderID);
                /*RECEIPT_FORM pmf = new RECEIPT_FORM(OrderID);
                pmf.setVisible(true);
                pmf.pack();
                pmf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));*/
            }
        }
    }//GEN-LAST:event_jButton_paymentActionPerformed

    //private boolean flag = true;
    
    private void jCheckBox_reverseTransactionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox_reverseTransactionItemStateChanged
        // TODO add your handling code here:
        //if(!flag)   return;
        if(jCheckBox_reverseTransaction.isSelected())
        {
            //TODO NOT ALLOWED FOR GENERAL CUSTOMER
        /*    if(jLabel_customerID.getText().toLowerCase().equals("general"))
            {
                JOptionPane.showMessageDialog(null,"REVERSE TRANSACTION CANNOT BE DONE FOR GENERAL CUSTOMER!");
                //flag = false;
                jCheckBox_reverseTransaction.doClick();
                //flag = true;
            }
            else*/
            {
                jLabel_balanceLabel.setText("PAID AMOUNT :");
                jLabel_balanceAmount.setText("Rs. " + Float.toString(paidAmount) + "/-");
            }
        }
        else
        {
            jLabel_balanceLabel.setText("BALANCE AMOUNT :");
            jLabel_balanceAmount.setText("Rs. " + Float.toString(balance) + "/-");
        }
    }//GEN-LAST:event_jCheckBox_reverseTransactionItemStateChanged

    private boolean InsertTranscation() {
         if(checkInputs())
        {
            Connection con = null;
            PreparedStatement ps = null;
            Savepoint savepoint1 = null;
            
            try {
                con = My_CNX.getConnection();
                con.setAutoCommit(false);
                //set a Savepoint
                savepoint1 = con.setSavepoint("Savepoint1");
                //Insert into transaction table
                try
                {
                    ps = con.prepareStatement("INSERT INTO transaction_table(id,OrderID,Amount,TransactionModeID,Date,Time,Direction)"
                        + "values(?,?,?,?,?,?,?) ");
                    ps.setString(1, jLabel_transactionID.getText());
                    ps.setString(2, jLabel_orderID.getText());
                    ps.setFloat(3, Float.parseFloat(jTextField_payment.getText()));
                    ps.setString(4, transactionModeID);
                    ps.setDate(5 , Myfunc.getCurrentDate());
                    ps.setTime(6, Myfunc.getCurrentTime());
                    ps.setBoolean(7, !jCheckBox_reverseTransaction.isSelected());
                    ps.executeUpdate();
                    
                    ps.close();
                }catch(SQLException ex)
                {
                    Logger.getLogger(CASH_MODE_PAYMENT_FORM.class.getName()).log(Level.SEVERE, null, ex);
                    throw ex;
                }
                finally
                {
                    if(ps != null) ps.close();
                }
                
                //Update order table
                try
                {
                    ps = con.prepareStatement("UPDATE order_table SET Balance = ? "
                    + " WHERE id = ?" );
                    if(jCheckBox_reverseTransaction.isSelected())
                        ps.setFloat(1, balance + Float.parseFloat(jTextField_payment.getText()));
                    else
                        ps.setFloat(1, balance - Float.parseFloat(jTextField_payment.getText()));
                    ps.setString(2, order.getID());
                    ps.executeUpdate();
                    
                    ps.close();
                }catch(SQLException ex)
                {
                    Logger.getLogger(CASH_MODE_PAYMENT_FORM.class.getName()).log(Level.SEVERE, null, ex);
                    throw ex;
                }
                finally
                {
                    if(ps != null) ps.close();
                }
                
                if(!jLabel_customerID.getText().toLowerCase().equals("general"))
                {
                    //Update in Customer Table
                    try
                    {
                        ps = con.prepareStatement("UPDATE customer_table SET Balance = ? "
                        + " WHERE id = ?" );
                        if(jCheckBox_reverseTransaction.isSelected())
                            ps.setFloat(1, customer.getBalance() + Float.parseFloat(jTextField_payment.getText()));
                        else
                            ps.setFloat(1, customer.getBalance() - Float.parseFloat(jTextField_payment.getText()));
                        ps.setString(2, customer.getId());
                        ps.executeUpdate();

                        ps.close();
                    }catch(SQLException ex)
                    {
                        Logger.getLogger(CASH_MODE_PAYMENT_FORM.class.getName()).log(Level.SEVERE, null, ex);
                        throw ex;
                    }
                    finally
                    {
                        if(ps != null) ps.close();
                    }
                }
                
                con.commit();
                con.close();
                //JOptionPane.showMessageDialog(null, "Data Inserted");
                return true;
            } catch (Exception ex) {
                 JOptionPane.showMessageDialog(null,"TRANSACTION FAILED : " + ex.getMessage());
                try {
                    if(con != null) {
                        con.rollback(savepoint1);
                    }
                } catch (SQLException ex1) {
                    Logger.getLogger(MANAGE_ORDERS_FORM.class.getName()).log(Level.SEVERE, null, ex1);
                }
            }finally
            {
                try { if(ps != null)  ps.close(); } catch(SQLException e){}
                try { if(con != null)  con.close(); } catch(SQLException e){}
            }
        }else{
            JOptionPane.showMessageDialog(null, "One Or More Field Are Empty");
        }
         return false;
    }

    private boolean checkInputs() {
        String pay = jTextField_payment.getText();
        String cash = jTextField_loadCash.getText();
             if(
              cash.equals("") || pay.equals("")
          ){
                 System.out.println("here");
            return false;
        }
        else{
            try{
                float fcash = Float.parseFloat(cash);
                float fpay = Float.parseFloat(pay);
                //Float.parseFloat(txt_price.getText());
                // TODO check phone number and email
                if(fcash == 0 || fpay == 0)
                {
                    JOptionPane.showMessageDialog(null, "You cannot pay Rs.0.0/-");
                    return false;
                }
                if(fcash < fpay)
                {
                    JOptionPane.showMessageDialog(null, "PAYMENT CANNOT be GREATER than The CASH RECEIVED!");
                    return false;
                }
                if(!jCheckBox_reverseTransaction.isSelected() && customer.getId().toLowerCase().equals("general"))
                {
                    if(fpay != balance)
                    {
                        JOptionPane.showMessageDialog(null, "GENERAL Customer MUST pay the FULL BALANCE AMOUNT!");
                        return false;
                    }
                }
                if(jCheckBox_reverseTransaction.isSelected())
                {
                    if(fpay > paidAmount)
                    {
                        JOptionPane.showMessageDialog(null,"You Should NOT RETURN MORE than the PAID Amount!");
                        return false;
                    }
                    if(customer.getId().toLowerCase().equals("general"))
                    {
                        if(fpay != paidAmount)
                        {
                            JOptionPane.showMessageDialog(null, "FULL AMOUNT SHOULD BE RETURNED TO A GENERAL CUSTOMER!");
                            return false;
                        }
                    }
                }
                return true;
            }catch(HeadlessException | NumberFormatException ex)
            {
                JOptionPane.showMessageDialog(null, "PROBLEM IN DATA : " + ex.getMessage());
                return false;
            }
        }
    }
    

    /**
     * @param args the command line arguments
     */
 //   public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
/*        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CASH_MODE_PAYMENT_FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CASH_MODE_PAYMENT_FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CASH_MODE_PAYMENT_FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CASH_MODE_PAYMENT_FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
 /*       java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CASH_MODE_PAYMENT_FORM().setVisible(true);
            }
        });
    }
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_cancel;
    private javax.swing.JButton jButton_payment;
    private javax.swing.JCheckBox jCheckBox_reverseTransaction;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_balanceAmount;
    private javax.swing.JLabel jLabel_balanceLabel;
    private javax.swing.JLabel jLabel_customerID;
    private javax.swing.JLabel jLabel_customerName;
    private javax.swing.JLabel jLabel_orderDate;
    private javax.swing.JLabel jLabel_orderID;
    private javax.swing.JLabel jLabel_remainingBalance;
    private javax.swing.JLabel jLabel_totalOrderAmount;
    private javax.swing.JLabel jLabel_transactionID;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField_change;
    private javax.swing.JTextField jTextField_loadCash;
    private javax.swing.JTextField jTextField_payment;
    // End of variables declaration//GEN-END:variables


   
}
